/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BuildSettingCreatedBy } from './BuildSettingCreatedBy';
import {
    BuildSettingCreatedByFromJSON,
    BuildSettingCreatedByFromJSONTyped,
    BuildSettingCreatedByToJSON,
} from './BuildSettingCreatedBy';
import type { DeploymentUnitCluster } from './DeploymentUnitCluster';
import {
    DeploymentUnitClusterFromJSON,
    DeploymentUnitClusterFromJSONTyped,
    DeploymentUnitClusterToJSON,
} from './DeploymentUnitCluster';
import type { DeploymentUnitLane } from './DeploymentUnitLane';
import {
    DeploymentUnitLaneFromJSON,
    DeploymentUnitLaneFromJSONTyped,
    DeploymentUnitLaneToJSON,
} from './DeploymentUnitLane';
import type { DeploymentUnitStage } from './DeploymentUnitStage';
import {
    DeploymentUnitStageFromJSON,
    DeploymentUnitStageFromJSONTyped,
    DeploymentUnitStageToJSON,
} from './DeploymentUnitStage';

/**
 * 
 * @export
 * @interface DeploymentUnit
 */
export interface DeploymentUnit {
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof DeploymentUnit
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {BuildSettingCreatedBy}
     * @memberof DeploymentUnit
     */
    createdBy: BuildSettingCreatedBy;
    /**
     * 
     * @type {Date}
     * @memberof DeploymentUnit
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {BuildSettingCreatedBy}
     * @memberof DeploymentUnit
     */
    updatedBy: BuildSettingCreatedBy;
    /**
     * 
     * @type {DeploymentUnitStage}
     * @memberof DeploymentUnit
     */
    stage: DeploymentUnitStage;
    /**
     * 
     * @type {DeploymentUnitCluster}
     * @memberof DeploymentUnit
     */
    cluster: DeploymentUnitCluster;
    /**
     * 
     * @type {DeploymentUnitLane}
     * @memberof DeploymentUnit
     */
    lane: DeploymentUnitLane;
    /**
     * 
     * @type {string}
     * @memberof DeploymentUnit
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentUnit
     */
    namespace: string;
    /**
     * 
     * @type {string}
     * @memberof DeploymentUnit
     */
    template?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    replicas?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    cpuLimit?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    memoryLimit?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    cpuRequest?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    memoryRequest?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    progressDeadline?: number;
    /**
     * 
     * @type {number}
     * @memberof DeploymentUnit
     */
    project: number;
}

/**
 * Check if a given object implements the DeploymentUnit interface.
 */
export function instanceOfDeploymentUnit(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "updatedBy" in value;
    isInstance = isInstance && "stage" in value;
    isInstance = isInstance && "cluster" in value;
    isInstance = isInstance && "lane" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "namespace" in value;
    isInstance = isInstance && "project" in value;

    return isInstance;
}

export function DeploymentUnitFromJSON(json: any): DeploymentUnit {
    return DeploymentUnitFromJSONTyped(json, false);
}

export function DeploymentUnitFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeploymentUnit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'createdBy': BuildSettingCreatedByFromJSON(json['created_by']),
        'updatedAt': (new Date(json['updated_at'])),
        'updatedBy': BuildSettingCreatedByFromJSON(json['updated_by']),
        'stage': DeploymentUnitStageFromJSON(json['stage']),
        'cluster': DeploymentUnitClusterFromJSON(json['cluster']),
        'lane': DeploymentUnitLaneFromJSON(json['lane']),
        'name': json['name'],
        'namespace': json['namespace'],
        'template': !exists(json, 'template') ? undefined : json['template'],
        'replicas': !exists(json, 'replicas') ? undefined : json['replicas'],
        'cpuLimit': !exists(json, 'cpu_limit') ? undefined : json['cpu_limit'],
        'memoryLimit': !exists(json, 'memory_limit') ? undefined : json['memory_limit'],
        'cpuRequest': !exists(json, 'cpu_request') ? undefined : json['cpu_request'],
        'memoryRequest': !exists(json, 'memory_request') ? undefined : json['memory_request'],
        'progressDeadline': !exists(json, 'progress_deadline') ? undefined : json['progress_deadline'],
        'project': json['project'],
    };
}

export function DeploymentUnitToJSON(value?: DeploymentUnit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_by': BuildSettingCreatedByToJSON(value.createdBy),
        'updated_by': BuildSettingCreatedByToJSON(value.updatedBy),
        'stage': DeploymentUnitStageToJSON(value.stage),
        'cluster': DeploymentUnitClusterToJSON(value.cluster),
        'lane': DeploymentUnitLaneToJSON(value.lane),
        'name': value.name,
        'namespace': value.namespace,
        'template': value.template,
        'replicas': value.replicas,
        'cpu_limit': value.cpuLimit,
        'memory_limit': value.memoryLimit,
        'cpu_request': value.cpuRequest,
        'memory_request': value.memoryRequest,
        'progress_deadline': value.progressDeadline,
        'project': value.project,
    };
}

