/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExecuteRequest
 */
export interface ExecuteRequest {
    /**
     * 
     * @type {number}
     * @memberof ExecuteRequest
     */
    repository: number;
    /**
     * 
     * @type {string}
     * @memberof ExecuteRequest
     */
    playbook?: string;
    /**
     * 
     * @type {string}
     * @memberof ExecuteRequest
     */
    inventories?: string;
    /**
     * 
     * @type {string}
     * @memberof ExecuteRequest
     */
    envvars?: string;
    /**
     * 
     * @type {string}
     * @memberof ExecuteRequest
     */
    extravars?: string;
}

/**
 * Check if a given object implements the ExecuteRequest interface.
 */
export function instanceOfExecuteRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "repository" in value;

    return isInstance;
}

export function ExecuteRequestFromJSON(json: any): ExecuteRequest {
    return ExecuteRequestFromJSONTyped(json, false);
}

export function ExecuteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecuteRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'repository': json['repository'],
        'playbook': !exists(json, 'playbook') ? undefined : json['playbook'],
        'inventories': !exists(json, 'inventories') ? undefined : json['inventories'],
        'envvars': !exists(json, 'envvars') ? undefined : json['envvars'],
        'extravars': !exists(json, 'extravars') ? undefined : json['extravars'],
    };
}

export function ExecuteRequestToJSON(value?: ExecuteRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'repository': value.repository,
        'playbook': value.playbook,
        'inventories': value.inventories,
        'envvars': value.envvars,
        'extravars': value.extravars,
    };
}

