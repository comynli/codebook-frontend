/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CommitRequest
 */
export interface CommitRequest {
    /**
     *
     * @type {string}
     * @memberof CommitRequest
     */
    sha: string;
    /**
     *
     * @type {string}
     * @memberof CommitRequest
     */
    url: string;
    /**
     *
     * @type {string}
     * @memberof CommitRequest
     */
    message: string;
    /**
     *
     * @type {string}
     * @memberof CommitRequest
     */
    committerName: string;
    /**
     *
     * @type {string}
     * @memberof CommitRequest
     */
    committerEmail: string;
    /**
     *
     * @type {Date}
     * @memberof CommitRequest
     */
    committedAt: Date;
}

/**
 * Check if a given object implements the CommitRequest interface.
 */
export function instanceOfCommitRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sha" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "committerName" in value;
    isInstance = isInstance && "committerEmail" in value;
    isInstance = isInstance && "committedAt" in value;

    return isInstance;
}

export function CommitRequestFromJSON(json: any): CommitRequest {
    return CommitRequestFromJSONTyped(json, false);
}

export function CommitRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitRequest {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        sha: json["sha"],
        url: json["url"],
        message: json["message"],
        committerName: json["committer_name"],
        committerEmail: json["committer_email"],
        committedAt: new Date(json["committed_at"]),
    };
}

export function CommitRequestToJSON(value?: CommitRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        sha: value.sha,
        url: value.url,
        message: value.message,
        committer_name: value.committerName,
        committer_email: value.committerEmail,
        committed_at: value.committedAt.toISOString(),
    };
}
