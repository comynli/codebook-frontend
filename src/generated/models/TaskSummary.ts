/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BuildSettingCreatedBy } from './BuildSettingCreatedBy';
import {
    BuildSettingCreatedByFromJSON,
    BuildSettingCreatedByFromJSONTyped,
    BuildSettingCreatedByToJSON,
} from './BuildSettingCreatedBy';
import type { Repository } from './Repository';
import {
    RepositoryFromJSON,
    RepositoryFromJSONTyped,
    RepositoryToJSON,
} from './Repository';

/**
 * 
 * @export
 * @interface TaskSummary
 */
export interface TaskSummary {
    /**
     * 
     * @type {number}
     * @memberof TaskSummary
     */
    readonly id: number;
    /**
     * 
     * @type {Date}
     * @memberof TaskSummary
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {BuildSettingCreatedBy}
     * @memberof TaskSummary
     */
    createdBy: BuildSettingCreatedBy;
    /**
     * 
     * @type {Date}
     * @memberof TaskSummary
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {BuildSettingCreatedBy}
     * @memberof TaskSummary
     */
    updatedBy: BuildSettingCreatedBy;
    /**
     * 
     * @type {Repository}
     * @memberof TaskSummary
     */
    repository: Repository;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    playbook?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    inventories?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    envvars?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    extravars?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    commitId?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskSummary
     */
    state?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskSummary
     */
    executeId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TaskSummary
     */
    periodic?: number | null;
}

/**
 * Check if a given object implements the TaskSummary interface.
 */
export function instanceOfTaskSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "updatedBy" in value;
    isInstance = isInstance && "repository" in value;

    return isInstance;
}

export function TaskSummaryFromJSON(json: any): TaskSummary {
    return TaskSummaryFromJSONTyped(json, false);
}

export function TaskSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'createdBy': BuildSettingCreatedByFromJSON(json['created_by']),
        'updatedAt': (new Date(json['updated_at'])),
        'updatedBy': BuildSettingCreatedByFromJSON(json['updated_by']),
        'repository': RepositoryFromJSON(json['repository']),
        'playbook': !exists(json, 'playbook') ? undefined : json['playbook'],
        'inventories': !exists(json, 'inventories') ? undefined : json['inventories'],
        'envvars': !exists(json, 'envvars') ? undefined : json['envvars'],
        'extravars': !exists(json, 'extravars') ? undefined : json['extravars'],
        'commitId': !exists(json, 'commit_id') ? undefined : json['commit_id'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'executeId': !exists(json, 'execute_id') ? undefined : json['execute_id'],
        'periodic': !exists(json, 'periodic') ? undefined : json['periodic'],
    };
}

export function TaskSummaryToJSON(value?: TaskSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_by': BuildSettingCreatedByToJSON(value.createdBy),
        'updated_by': BuildSettingCreatedByToJSON(value.updatedBy),
        'repository': RepositoryToJSON(value.repository),
        'playbook': value.playbook,
        'inventories': value.inventories,
        'envvars': value.envvars,
        'extravars': value.extravars,
        'commit_id': value.commitId,
        'state': value.state,
        'execute_id': value.executeId,
        'periodic': value.periodic,
    };
}

