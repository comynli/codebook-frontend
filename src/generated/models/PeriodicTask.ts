/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PeriodicTaskPeriodic } from './PeriodicTaskPeriodic';
import {
    PeriodicTaskPeriodicFromJSON,
    PeriodicTaskPeriodicFromJSONTyped,
    PeriodicTaskPeriodicToJSON,
} from './PeriodicTaskPeriodic';
import type { PeriodicTaskRepository } from './PeriodicTaskRepository';
import {
    PeriodicTaskRepositoryFromJSON,
    PeriodicTaskRepositoryFromJSONTyped,
    PeriodicTaskRepositoryToJSON,
} from './PeriodicTaskRepository';

/**
 * 
 * @export
 * @interface PeriodicTask
 */
export interface PeriodicTask {
    /**
     * 
     * @type {number}
     * @memberof PeriodicTask
     */
    readonly id: number;
    /**
     * 
     * @type {PeriodicTaskRepository}
     * @memberof PeriodicTask
     */
    repository: PeriodicTaskRepository;
    /**
     * 
     * @type {PeriodicTaskPeriodic}
     * @memberof PeriodicTask
     */
    periodic: PeriodicTaskPeriodic;
    /**
     * 
     * @type {Date}
     * @memberof PeriodicTask
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PeriodicTask
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PeriodicTask
     */
    playbook?: string;
    /**
     * 
     * @type {string}
     * @memberof PeriodicTask
     */
    inventories?: string;
    /**
     * 
     * @type {string}
     * @memberof PeriodicTask
     */
    envvars?: string;
    /**
     * 
     * @type {string}
     * @memberof PeriodicTask
     */
    extravars?: string;
    /**
     * 
     * @type {number}
     * @memberof PeriodicTask
     */
    createdBy?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PeriodicTask
     */
    updatedBy?: number | null;
}

/**
 * Check if a given object implements the PeriodicTask interface.
 */
export function instanceOfPeriodicTask(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "repository" in value;
    isInstance = isInstance && "periodic" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function PeriodicTaskFromJSON(json: any): PeriodicTask {
    return PeriodicTaskFromJSONTyped(json, false);
}

export function PeriodicTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeriodicTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'repository': PeriodicTaskRepositoryFromJSON(json['repository']),
        'periodic': PeriodicTaskPeriodicFromJSON(json['periodic']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'playbook': !exists(json, 'playbook') ? undefined : json['playbook'],
        'inventories': !exists(json, 'inventories') ? undefined : json['inventories'],
        'envvars': !exists(json, 'envvars') ? undefined : json['envvars'],
        'extravars': !exists(json, 'extravars') ? undefined : json['extravars'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
        'updatedBy': !exists(json, 'updated_by') ? undefined : json['updated_by'],
    };
}

export function PeriodicTaskToJSON(value?: PeriodicTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'repository': PeriodicTaskRepositoryToJSON(value.repository),
        'periodic': PeriodicTaskPeriodicToJSON(value.periodic),
        'playbook': value.playbook,
        'inventories': value.inventories,
        'envvars': value.envvars,
        'extravars': value.extravars,
        'created_by': value.createdBy,
        'updated_by': value.updatedBy,
    };
}

