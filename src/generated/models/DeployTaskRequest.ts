/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StateEnum } from './StateEnum';
import {
    StateEnumFromJSON,
    StateEnumFromJSONTyped,
    StateEnumToJSON,
} from './StateEnum';

/**
 * 
 * @export
 * @interface DeployTaskRequest
 */
export interface DeployTaskRequest {
    /**
     * 
     * @type {string}
     * @memberof DeployTaskRequest
     */
    version: string;
    /**
     * 
     * @type {StateEnum}
     * @memberof DeployTaskRequest
     */
    state?: StateEnum;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskRequest
     */
    yaml?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskRequest
     */
    error?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DeployTaskRequest
     */
    generation?: number;
}

/**
 * Check if a given object implements the DeployTaskRequest interface.
 */
export function instanceOfDeployTaskRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function DeployTaskRequestFromJSON(json: any): DeployTaskRequest {
    return DeployTaskRequestFromJSONTyped(json, false);
}

export function DeployTaskRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeployTaskRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'state': !exists(json, 'state') ? undefined : StateEnumFromJSON(json['state']),
        'yaml': !exists(json, 'yaml') ? undefined : json['yaml'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'generation': !exists(json, 'generation') ? undefined : json['generation'],
    };
}

export function DeployTaskRequestToJSON(value?: DeployTaskRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'state': StateEnumToJSON(value.state),
        'yaml': value.yaml,
        'error': value.error,
        'generation': value.generation,
    };
}

