/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthorizationUser } from './AuthorizationUser';
import {
    AuthorizationUserFromJSON,
    AuthorizationUserFromJSONTyped,
    AuthorizationUserToJSON,
} from './AuthorizationUser';

/**
 * 
 * @export
 * @interface Authorization
 */
export interface Authorization {
    /**
     * 
     * @type {number}
     * @memberof Authorization
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Authorization
     */
    readonly token: string;
    /**
     * 
     * @type {AuthorizationUser}
     * @memberof Authorization
     */
    user: AuthorizationUser;
    /**
     * 
     * @type {Date}
     * @memberof Authorization
     */
    readonly expiredAt: Date;
}

/**
 * Check if a given object implements the Authorization interface.
 */
export function instanceOfAuthorization(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "expiredAt" in value;

    return isInstance;
}

export function AuthorizationFromJSON(json: any): Authorization {
    return AuthorizationFromJSONTyped(json, false);
}

export function AuthorizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authorization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'token': json['token'],
        'user': AuthorizationUserFromJSON(json['user']),
        'expiredAt': (new Date(json['expired_at'])),
    };
}

export function AuthorizationToJSON(value?: Authorization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': AuthorizationUserToJSON(value.user),
    };
}

