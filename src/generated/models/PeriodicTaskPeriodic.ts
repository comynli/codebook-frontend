/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CeleryPeriodicTask } from './CeleryPeriodicTask';
import {
    CeleryPeriodicTaskFromJSON,
    CeleryPeriodicTaskFromJSONTyped,
    CeleryPeriodicTaskToJSON,
} from './CeleryPeriodicTask';
import type { CrontabSchedule } from './CrontabSchedule';
import {
    CrontabScheduleFromJSON,
    CrontabScheduleFromJSONTyped,
    CrontabScheduleToJSON,
} from './CrontabSchedule';

/**
 * 
 * @export
 * @interface PeriodicTaskPeriodic
 */
export interface PeriodicTaskPeriodic {
    /**
     * 
     * @type {CrontabSchedule}
     * @memberof PeriodicTaskPeriodic
     */
    crontab: CrontabSchedule;
    /**
     * If True, the schedule will only run the task a single time
     * @type {boolean}
     * @memberof PeriodicTaskPeriodic
     */
    oneOff?: boolean;
    /**
     * Set to False to disable the schedule
     * @type {boolean}
     * @memberof PeriodicTaskPeriodic
     */
    enabled?: boolean;
}

/**
 * Check if a given object implements the PeriodicTaskPeriodic interface.
 */
export function instanceOfPeriodicTaskPeriodic(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "crontab" in value;

    return isInstance;
}

export function PeriodicTaskPeriodicFromJSON(json: any): PeriodicTaskPeriodic {
    return PeriodicTaskPeriodicFromJSONTyped(json, false);
}

export function PeriodicTaskPeriodicFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeriodicTaskPeriodic {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'crontab': CrontabScheduleFromJSON(json['crontab']),
        'oneOff': !exists(json, 'one_off') ? undefined : json['one_off'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
    };
}

export function PeriodicTaskPeriodicToJSON(value?: PeriodicTaskPeriodic | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'crontab': CrontabScheduleToJSON(value.crontab),
        'one_off': value.oneOff,
        'enabled': value.enabled,
    };
}

