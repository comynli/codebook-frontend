/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeploymentUnitSummary } from './DeploymentUnitSummary';
import {
    DeploymentUnitSummaryFromJSON,
    DeploymentUnitSummaryFromJSONTyped,
    DeploymentUnitSummaryToJSON,
} from './DeploymentUnitSummary';

/**
 * 
 * @export
 * @interface DeployTaskDeploymentUnit
 */
export interface DeployTaskDeploymentUnit {
    /**
     * 
     * @type {number}
     * @memberof DeployTaskDeploymentUnit
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskDeploymentUnit
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskDeploymentUnit
     */
    readonly stage: string;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskDeploymentUnit
     */
    readonly cluster: string;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskDeploymentUnit
     */
    readonly lane: string;
    /**
     * 
     * @type {string}
     * @memberof DeployTaskDeploymentUnit
     */
    namespace: string;
}

/**
 * Check if a given object implements the DeployTaskDeploymentUnit interface.
 */
export function instanceOfDeployTaskDeploymentUnit(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "stage" in value;
    isInstance = isInstance && "cluster" in value;
    isInstance = isInstance && "lane" in value;
    isInstance = isInstance && "namespace" in value;

    return isInstance;
}

export function DeployTaskDeploymentUnitFromJSON(json: any): DeployTaskDeploymentUnit {
    return DeployTaskDeploymentUnitFromJSONTyped(json, false);
}

export function DeployTaskDeploymentUnitFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeployTaskDeploymentUnit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'stage': json['stage'],
        'cluster': json['cluster'],
        'lane': json['lane'],
        'namespace': json['namespace'],
    };
}

export function DeployTaskDeploymentUnitToJSON(value?: DeployTaskDeploymentUnit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'namespace': value.namespace,
    };
}

