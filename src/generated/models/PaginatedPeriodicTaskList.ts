/* tslint:disable */
/* eslint-disable */
/**
 * Codebook Api
 * A simple api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PeriodicTask } from './PeriodicTask';
import {
    PeriodicTaskFromJSON,
    PeriodicTaskFromJSONTyped,
    PeriodicTaskToJSON,
} from './PeriodicTask';

/**
 * 
 * @export
 * @interface PaginatedPeriodicTaskList
 */
export interface PaginatedPeriodicTaskList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedPeriodicTaskList
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedPeriodicTaskList
     */
    current?: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedPeriodicTaskList
     */
    size?: number;
    /**
     * 
     * @type {Array<PeriodicTask>}
     * @memberof PaginatedPeriodicTaskList
     */
    results?: Array<PeriodicTask>;
}

/**
 * Check if a given object implements the PaginatedPeriodicTaskList interface.
 */
export function instanceOfPaginatedPeriodicTaskList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaginatedPeriodicTaskListFromJSON(json: any): PaginatedPeriodicTaskList {
    return PaginatedPeriodicTaskListFromJSONTyped(json, false);
}

export function PaginatedPeriodicTaskListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedPeriodicTaskList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': !exists(json, 'count') ? undefined : json['count'],
        'current': !exists(json, 'current') ? undefined : json['current'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'results': !exists(json, 'results') ? undefined : ((json['results'] as Array<any>).map(PeriodicTaskFromJSON)),
    };
}

export function PaginatedPeriodicTaskListToJSON(value?: PaginatedPeriodicTaskList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'current': value.current,
        'size': value.size,
        'results': value.results === undefined ? undefined : ((value.results as Array<any>).map(PeriodicTaskToJSON)),
    };
}

